/********************25/04/09***Result of test given by t_sig_overhead*********/
sligth  version : no wrapper, call add(c,a,b) directly
complet version : with wrapper which turns from c = a+b to add(c,a,b)
 
SIZE 8192
DYNAMIC ALLOC 
   +   58860   Sligth ADD SIGFL
   +   27090   Sligth ADD SIGFL
   +   26990   Sligth ADD SIGFL
   +   27030   Sligth ADD SIGFL
//char* toto = new char[16];
   +   51420   Sligth ADD SIGFL
   +   21570   Sligth ADD SIGFL
   +   21500   Sligth ADD SIGFL
   +   21350   Sligth ADD SIGFL
ARRAY
   +   46290   Sligth ADD SIGFL
   +   17930   Sligth ADD SIGFL
   +   17810   Sligth ADD SIGFL
   +   17820   Sligth ADD SIGFL

DYNAMIC ALLOC 
   +   59900   ADD SIGFL
   +   27920   ADD SIGFL
   +   28040   ADD SIGFL
   +   27930   ADD SIGFL
//char* toto = new char[16];
   +   52520   ADD SIGFL
   +   22500   ADD SIGFL
   +   22380   ADD SIGFL
   +   22690   ADD SIGFL

SIZE 256
DYN
   +   1800   Sligth ADD SIGFL
   +   380   Sligth ADD SIGFL
   +   330   Sligth ADD SIGFL
   +   320   Sligth ADD SIGFL
ARRAY
   +   1220   Sligth ADD SIGFL
   +   390   Sligth ADD SIGFL
   +   320   Sligth ADD SIGFL
   +   330   Sligth ADD SIGFL
DYN
   +   2630   ADD SIGFL
   +   890   ADD SIGFL
   +   920   ADD SIGFL
   +   910   ADD SIGFL

//===========================in ms=============================================//
SIZE 2048 x 50000
DYNAMIC ALLOC 
       	Sligth Compute on float      total:    202, mean:  202, min:  202, max:  202, loop: 1
//char* toto = new char[16];
	Sligth Compute on float      total:    102, mean:  102, min:  102, max:  102, loop: 1
ARRAY
	Sligth Compute on float      total:     64, mean:   64, min:   64, max:   64, loop: 1

DYNAMIC ALLOC
	Heavy  Compute on float      total:    212, mean:  212, min:  212, max:  212, loop: 1
//char* toto = new char[16];
	Heavy  Compute on float      total:    111, mean:  111, min:  111, max:  111, loop: 1

SIZE 256 x 50000
	Sligth Compute on float      total:      8, mean:    8, min:    8, max:    8, loop: 1	
	Heavy  Compute on float      total:     17, mean:   17, min:   17, max:   17, loop: 1
/*******************************************************************************/


RESUME:
8192	overhead = 1000/21500 (9ms/102ms)
 256    overhead =  560/340

overhead estimated for eltwise ~~ 600cycles/call

Dynamic Alloc: unstable performance 



/****28/09/09*****************Test on fedora 11 Intel CoreQuad**************************/
Size = 32
--Heavy
A = B + C   =>1640 cycles       147 ms   /500000
add(A,B,C)  =>180  cycles       11  ms   /500000
--Sligth
normal        130  cycles       9   ms
precalcul     60   cycles       4   ms
